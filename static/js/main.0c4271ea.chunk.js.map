{"version":3,"sources":["Timer.jsx","App.js","index.js"],"names":["Timer","useState","second","setSecond","minute","setminute","isActive","setIsActive","counter","setCounter","useEffect","intervalId","setInterval","secondCounter","minuteCounter","Math","floor","computedsecond","String","length","computedminute","clearInterval","className","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"wPAoDeA,EA9CH,WACZ,MAAwBC,mBAAS,MAAjC,mBAAMC,EAAN,KAAaC,EAAb,KACA,EAAwBF,mBAAS,MAAjC,mBAAMG,EAAN,KAAaC,EAAb,KACA,EAA4BJ,oBAAS,GAArC,mBAAMK,EAAN,KAAeC,EAAf,KACA,EAA0BN,mBAAS,GAAnC,mBAAMO,EAAN,KAAcC,EAAd,KAuBI,OAfAC,qBAAU,WACN,IAAIC,EAYJ,OAXGL,IACCK,EAAWC,aAAY,WACnB,IAAMC,EAAcL,EAAQ,GACtBM,EAAcC,KAAKC,MAAMR,EAAQ,IACjCS,EAA8C,IAA/BC,OAAOL,GAAeM,OAAtB,WAAuCN,GAAgBA,EACtEO,EAA8C,IAA/BF,OAAOJ,GAAeK,OAAtB,WAAuCL,GAAgBA,EAC5EX,EAAUc,GACVZ,EAAUe,GACVX,EAAWD,EAAQ,KACrB,MAEC,kBAAIa,cAAcV,MAC3B,CAACL,EAASE,IAER,sBAAKc,UAAU,YAAf,UACI,sBAAKA,UAAU,OAAf,UACI,sBAAMA,UAAU,SAAhB,SAA0BpB,IAC1B,qCACA,sBAAMoB,UAAU,SAAhB,SAA0BlB,OAE9B,sBAAKkB,UAAU,UAAf,UACI,wBAAQC,QAAS,kBACjBhB,GAAaD,IACXgB,UAAU,QAFZ,SAGKhB,EAAW,QAAQ,UAExB,wBAAQiB,QAnCR,WACZhB,GAAY,GACZF,EAAU,MACVF,EAAU,MACVM,EAAW,IA+B6Ba,UAAU,QAAtC,0BCrCDE,MANf,WACE,OACE,cAAC,EAAD,KCGJC,IAASC,OAEN,cAAC,EAAD,IAAOC,SAASC,eAAe,W","file":"static/js/main.0c4271ea.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react/cjs/react.development\";\r\nimport './style.css'; \r\n\r\n\r\n\r\nconst Timer=()=>{\r\nconst[second,setSecond]=useState('00')\r\nconst[minute,setminute]=useState('00')\r\nconst[isActive,setIsActive]=useState(false)\r\nconst[counter,setCounter]=useState(0)\r\nconst stopTimer=()=>{\r\n    setIsActive(false)\r\n    setminute(\"00\")\r\n    setSecond(\"00\")\r\n    setCounter(0)\r\n\r\n}\r\n    useEffect(()=>{\r\n        let intervalId;\r\n        if(isActive){\r\n            intervalId=setInterval(()=>{\r\n                const secondCounter=counter%60;\r\n                const minuteCounter=Math.floor(counter/60);\r\n                const computedsecond=String(secondCounter).length===1 ? `0${secondCounter}`:secondCounter;\r\n                const computedminute=String(minuteCounter).length===1 ? `0${minuteCounter}`:minuteCounter;\r\n                setSecond(computedsecond);\r\n                setminute(computedminute);\r\n                setCounter(counter+1);\r\n            },1000)\r\n        }\r\n        return ()=>clearInterval(intervalId)\r\n    },[isActive,counter])\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"time\">\r\n                <span className=\"minute\">{second}</span>\r\n                <span>:</span>\r\n                <span className=\"second\">{minute}</span>\r\n            </div>\r\n            <div className=\"buttons\">\r\n                <button onClick={()=>\r\n                setIsActive(!isActive)\r\n                } className=\"start\">\r\n                    {isActive ? \"pause\":\"Start\"}\r\n                </button>\r\n                <button onClick={stopTimer} className=\"reset\">Reset</button>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\nexport default Timer","import './App.css';\r\nimport Timer from \"./Timer.jsx\"\r\n\r\nfunction App() {\r\n  return (\r\n    <Timer/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App'\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n \r\n   <App/>,document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}